
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 2.18.0
 * Query Engine version: da6fafb57b24e0b61ca20960c64e2d41f9e8cff1
 */
Prisma.prismaVersion = {
  client: "2.18.0",
  engine: "da6fafb57b24e0b61ca20960c64e2d41f9e8cff1"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */

Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.BooksScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  creator: 'creator',
  publisher: 'publisher',
  id_category: 'id_category',
  isbn: 'isbn',
  pages: 'pages',
  cover: 'cover',
  id_user: 'id_user',
  descriptions: 'descriptions'
});

exports.Prisma.UsersScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  username: 'username',
  email: 'email',
  password: 'password'
});

exports.Prisma.CategoryScalarFieldEnum = makeEnum({
  id: 'id',
  name_category: 'name_category',
  icon: 'icon'
});

exports.Prisma.BorrowingScalarFieldEnum = makeEnum({
  id: 'id',
  borrower_name: 'borrower_name',
  book_id: 'book_id',
  user_id: 'user_id',
  start_date: 'start_date',
  end_date: 'end_date',
  status: 'status'
});

exports.Prisma.DiscussScalarFieldEnum = makeEnum({
  id: 'id',
  book_id: 'book_id',
  user_id: 'user_id',
  discuss: 'discuss'
});

exports.Prisma.RatingScalarFieldEnum = makeEnum({
  id: 'id',
  rating: 'rating',
  book_id: 'book_id'
});

exports.Prisma.User_detailScalarFieldEnum = makeEnum({
  id: 'id',
  user_id: 'user_id',
  ktp: 'ktp',
  alamat: 'alamat',
  jenis_kelamin: 'jenis_kelamin',
  usia: 'usia',
  ttl: 'ttl'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});


exports.Prisma.ModelName = makeEnum({
  books: 'books',
  users: 'users',
  category: 'category',
  borrowing: 'borrowing',
  discuss: 'discuss',
  rating: 'rating',
  user_detail: 'user_detail'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
